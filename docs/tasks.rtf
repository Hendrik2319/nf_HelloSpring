{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red252\green49\blue17;\red0\green0\blue0;
}
{\*\expandedcolortbl;;\cssrgb\c100000\c100000\c100000;\cssrgb\c100000\c29020\c6667;\cssrgb\c0\c0\c0;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid2\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}
\paperw11900\paperh16840\margl1440\margr1440\vieww19340\viewh13440\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs48 \cf2 \cb3 \expnd0\expndtw0\kerning0
Recherche\
\pard\pardeftab720\sa320\partightenfactor0

\f1\b0\fs32 \cf0 \cb2 Findet gemeinsam f\'fcr die hier aufgelisteten Fragen Antworten und tragt sie hier ein.\
Seid kreativ! Alles ist erlaubt! Bitte nutzt zum Beispiel gerne Google, ChatGPT, Eure Freunde und Bekannte, Eure IDE, andere Webseiten oder B\'fccher oder was auch immer.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Warum verwendet man verschiedene HTTP-Methoden (GET, POST, PUT, DELETE) in einer RESTful API und welche Bedeutung haben sie?\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Erkl\'e4rt die Verwendung und den Zweck jeder Methode.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls1\ilvl1\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8259 	}\expnd0\expndtw0\kerning0
GET: Wird verwendet, um Daten von einem Server abzurufen.     POST: Dient zum Erstellen neuer Ressourcen auf dem Server.     PUT: Wird verwendet, um vorhandene Ressourcen zu aktualisieren.     DELETE: Dient zum L\'f6schen von Ressourcen auf dem Server.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Was ist der Unterschied zwischen der Verwendung von Query-Parametern und Path Variables in Controller-Endpunkten?\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Gebt Beispiele f\'fcr Situationen, in denen die Verwendung von Query-Parametern sinnvoll ist, und Situationen, in denen Path Variables besser geeignet sind.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls1\ilvl1\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8259 	}\expnd0\expndtw0\kerning0
Path-Variablen: z.B. als ID f\'fcr eine bestimmte Resource;    Query-Variable: z.B. als Parameter bei einer Suche\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Wann sollte man den Request Body verwenden und welche Vorteile bietet er?\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Erl\'e4utert, warum und wann die Verwendung des Request Body sinnvoll ist und wie er bei der Daten\'fcbertragung in einer RESTful API hilfreich ist.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls1\ilvl1\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8259 	}\expnd0\expndtw0\kerning0
Sicherheit und Flexibilit\'e4t\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\cf0 \
\
\pard\pardeftab720\partightenfactor0

\f0\b\fs48 \cf2 \cb3 Coding-Aufgabe: HelloWorld Controller\
\pard\pardeftab720\sa320\partightenfactor0

\f1\b0\fs32 \cf0 \cb2 Erstellt ein neues Spring Boot Projekt in IntelliJ und implementiert einen einfachen 'HelloWorld' Controller.\
Verwendet dabei die gelernten Konzepte wie Annotations, HTTP-Methoden und Path Variables.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Schritt 1: Erstelle eine Spring-Boot-Anwendung mit dem Spring Initializr und f\'fcge den spring-web-starter hinzu.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Schritt 2: Schreibe einen Controller, der eine GET-Anfrage auf '/hello' verarbeitet und 'Hello, World!' zur\'fcckgibt.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Schritt 3: Verwende Path Variables, um den Namen in der Nachricht anzupassen.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Beispiel: '/hello/John' gibt 'Hello, John!' zur\'fcck.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Schritt 4: Teste deine Controller-Methode mit einem REST-Client oder Postman und dokumentiere deine Ergebnisse.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Bitte poste hier den Link zu deinem GitHub-Repository, in dem du deine HelloWorld-Anwendung erstellt hast.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Enter answer here\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Falls ihr diese Aufgabe bereits fr\'fcher abgeschlossen habt, d\'fcrft ihr die Bonusaufgabe auf der n\'e4chsten Seite bearbeiten.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\cf0 \
\
\pard\pardeftab720\partightenfactor0

\f0\b\fs48 \cf2 \cb3 Bonus-Aufgabe\
\pard\pardeftab720\sa320\partightenfactor0

\f1\b0\fs32 \cf0 \cb2 Super, du hast Zeit f\'fcr die Bonusaufgabe! Bearbeite diese optionalen Zusatzaufgaben, um deine Kenntnisse weiter zu vertiefen.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Schritt 1: Erstelle eine neue Klasse 'Message' mit den Felder 'name', 'message' und 'id' vom Typ String.\
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Schritt 2: Der Controller soll nun eine Liste von Message-Objekten haben.\
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Schritt 3: Implementiere eine zus\'e4tzliche Controller-Methode, die eine POST-Anfrage auf '/messages' verarbeitet. Diese Methode sollte eine id, einen Namen und eine Message im Request-Body entgegennehmen und sie in der Liste speichern.\
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Schritt 4: Implementiere eine zus\'e4tzliche Controller-Methode, die eine GET-Anfrage auf '/messages' verarbeitet. Diese Methode sollte die Liste der Messages zur\'fcckgeben.\
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Schritt 5: Implementiere eine zus\'e4tzliche Controller-Methode, die eine DELETE-Anfrage auf '/messages/id' verarbeitet. Diese Methode sollte die Message mit der entsprechenden id aus der Liste l\'f6schen.(nutze eine Path Variable)\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\cf0 \
}